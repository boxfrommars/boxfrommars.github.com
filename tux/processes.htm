<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Tux API</title>

    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://yandex.st/highlightjs/8.0/styles/github.min.css">

    <!-- Custom styles for this template -->
    <style>
        /* Sticky footer styles
        -------------------------------------------------- */
        html,
        body {
            height: 100%;
            /* The html and body elements cannot have any padding or margin. */
        }

        /* Wrapper for page content to push down footer */
        #wrap {
            min-height: 100%;
            height: auto;
            /* Negative indent footer by its height */
            margin: 0 auto -60px;
            /* Pad bottom by footer height */
            padding: 0 0 60px;
        }

        /* Set the fixed height of the footer here */
        #footer {
            height: 60px;
            background-color: #f5f5f5;
        }


        /* Custom page CSS
        -------------------------------------------------- */
        /* Not required for template or sticky footer method. */

        #push {
            height: 40px;
        }

        #wrap > .container {
            padding: 60px 15px 0;
        }
        .container .text-muted {
            margin: 20px 0;
        }

        #footer > .container {
            padding-left: 15px;
            padding-right: 15px;
        }


        .bs-sidenav {
            margin-top: 50px;
            text-shadow: 0 1px 0 #fff;
            background-color: #f7f5fa;
            border-radius: 5px;
            padding: 10px 0;
            width: 100%;
        }
        .bs-sidenav .active .active {
            background-color: #e7e7e7;
        }
        .bs-sidenav .active {
            background-color: #efefef;
        }
        .sidebar-affix {
            width: 240px;
        }
        .bs-sidenav ul li a {
            padding-left: 45px;
        }
        pre.code {
            border-radius: 0;
            border: 0;
            margin-bottom: 2em;
        }
        h2.anchored {
            padding-top: 80px;
            margin-top: -45px;
        }
        h4.anchored,  h5.anchored{
            padding-top: 68px;
            margin-top: -45px;
            padding-bottom: 0.8em;
        }
        h6 {
            font-size: 1em;
            font-weight: normal;
        }
        .bs-sidenav li>a {
            padding: 5px 15px;
        }
        .pseudo-link {
            border-bottom: 1px dashed #428bca;
        }
        .pseudo-link:hover,
        .pseudo-link:focus {
            text-decoration: none;
            border-bottom: 1px solid #2a6496;
        }
    </style>
</head>

<body>

<!-- Wrap all page content here -->
<div id="wrap">

    <!-- Fixed navbar -->
    <div class="navbar navbar-default navbar-fixed-top" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/tux/index.htm">Tux API</a>
            </div>
            <div class="collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    <li><a href="/tux/index.htm">Общие сведения</a></li>
                    <li><a href="/tux/api.htm">API</a></li>
                    <li><a href="/tux/api-websocket.htm">WebSocket API</a></li>
                    <li><a href="/tux/schema.htm">Схемы API</a></li>
                    <li><a href="/tux/processes.htm">Процессы взаимодействия</a></li>
                    <li><a href="/tux/test.htm">Тест API</a></li>
                    <li><a href="/tux/changelog.htm">Changelog</a></li>
                </ul>
            </div><!--/.nav-collapse -->
        </div>
    </div>

    <!-- Begin page content -->
    <div class="container">
        <div class="row">
            <div class="col-md-9">
                <div class="page-header">
                    <h1>Примеры взаимодействия</h1>
                </div>

                <h2 class="anchored" id="js-href-process-call">1. Звонок</h2>
                <p>Параллельно со звонком сервер, используя WebSocket, отправляет сообщение в операторское приложение (далее -- приложение) с уведомлением о заказе. С точки зрения сервера, существуют три возможные ситуации:</p>
                <ul>
                    <li>Клиент звонит первый раз. Тогда сервер создаёт пустой заказ и отправляет приложению его <code>id</code></li>
                    <li>Клиент звонит в то время, когда у него уже есть заказ, тогда сервер отправляет <code>id</code> этого заказа</li>
                    <li>Клиент звонит, и у него есть недавно завершившийся заказ. И в этом случае сервер отдаёт приложению <code>id</code> этого заказа</li>
                </ul>
                <p>Как видим, во всех случаях сервер посылает <a href="/tux/api-websocket.htm#js-href-type-order">уведомление о заказе</a> с <code>id</code> заказа. Приложение же на основе лога событий (<a href="/tux/api.htm#js-href-parts-timeline">timeline</a>) "понимает" текущее состояние заказа</p>
                <p class="alert alert-warning">Итак, сервер при звонке <b>всегда</b> отдаёт приложению websocket-сообщение вида:</p>
<pre class="code">
{
    "type": "order",
    "data": {
        "id": 3385390,
        "type": "client" // нужен для представления, возможные значения: driver client
    }
}
</pre>
                <p class="alert alert-warning">При поступлении такого уведомления приложение <a href="/tux/api.htm#js-href-order-get">запрашивает у сервера</a> заказ с переданным <code>id</code></p>
                <p><code>GET /order/:orderId</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-order" class="pseudo-link"><b>Пример ответа сервера</b></a></p>
                    <div id="js-collapse-order" class="collapse">
<pre class="code">
{
    "id": 3385390,
    "customer": {
        "id": 5687,                     // id клиента
        "name": "Кирилл Евдаков",       // имя
        "language": "ru",               // язык
        "rank": 5,                      // кол-во звёздочек
        "phone": "79615373407",         // номер телефона клиента
        "discountCard": "505",          // номер скидочной карты
        "frequentAddresses": []         // частые адреса (такой же формат, как и address, за исключением, может быть, комментария)
    },
    "areaId": 2,     // группа городов (группа городов нужна ещё и в заказе, чтобы определять часовой пояс)
    "rides": [{ // поездки. @TODO придумать нормальное название
        "id": 754309, // id поездки
        "orderType": "preorder", // тип заказа "emergence", "preorder", "normal"
        "preOrderTime": "2014-01-28T13:21:60Z", // время подачи (если предзаказ),
        "alertTypeId": 1, // тип оповещения
        "orderedProperties": { // заказанные свойства
            "options": [2, 5, 7],
            "type": { // тип автомобиля (грузовой, легковой, мотоцикл)
                "id": 4,
                "classId": 12 // класс автомобиля, если есть
            }
        },
        "phone": "79182220200", // Номер для связи
        "description": "Клиент с собакой", // комментарий к поездке, такие как: на верхний багажник лыжи и сноуборд; 2 чемодана в багажник, и т.д
        "departureAddress": { // пункт отбытия
            "id": 768665,
            "isPublic": false, // публичное ли место
            "street": {  // улица
                "id": 7058,  // id улицы, если есть в словаре
                "name": "Зиповская" // необязательно, если есть id, но в ответе от сервера лучше передавать, из-за маловероятной возможности, что в ловаре ОП ещё нет этой улицы
            },
            "district": { // район
                "id": 789,
                "name": "ЗИП",
                "city": { // населённый пункт
                    "id": 4,
                    "name": "Адлер"
                }
            },
            "house": "5", // дом
            "entrance": { // подъезд
                "id": 6767660,
                "name": "Красная/Северная",
                "location": { // координаты подъезда
                    "lt": "+45.065397", // широта
                    "ln": "+38.993386"  // долгота
                }
            },
            "description": "Между Белкой и Пиноккио Джан до конца, зелёная лестница" // постоянный комментарий/описание к адресу
        },
        "destination": { // пункт назначения (необязательно)
            "id": 768665,
            "isPublic": false, // публичное ли место
            "street": {  // улица
                "id": 7058,  // id улицы, если есть в словаре
                "name": "Зиповская" // необязательно, если есть id, но в ответе от сервера лучше передавать, из-за маловероятной возможности, что в ловаре ОП ещё нет этой улицы
            },
            "district": { // район
                "id": 789,
                "name": "ЗИП",
                "city": { // населённый пункт
                    "id": 4,
                    "name": "Адлер"
                }
            },
            "house": "5", // дом
            "entrance": { // подъезд
                "id": 6767660,
                "name": "Красная/Северная",
                "location": { // координаты подъезда
                    "lt": "+45.065397", // широта
                    "ln": "+38.993386"  // долгота
                }
            },
            "description": "" // постоянный комментарий/описание к адресу
        },
        "vehicle": {
            "id": 234,
            "callSign": "5CC1-4", // позывной
            "brandId": 12, // марка машины
            "colorId": 1, // цвет
            "type": { // тип автомобиля (грузовой, легковой, мотоцикл)
                "id": 4,
                "classId": 12 // класс автомобиля, если есть
            },
            "number": "KK345O", // номер автомобиля
            "options": [1, 2, 5 ,7] // опции автомобиля
        },
        "timeline": [ // лог событий, от последнего к первому
            {
                "type": "arrive", // тип события, такие как:  звонок клиента (является ли это событием для лога?), назначение автомобиля (assign), автомобиль приехал, дозвон не удался, сообщение от пассажира и т.д.
                "time": "2014-01-28T13:21:60Z", // unix timestamp события
                "message": "какое-то сообщения", // сообщение
                "data": {} // какая-то доп. информация
            }, {
                "type": "call",
                "time": "2014-01-28T13:21:60Z",
                "message": "",
                "data": {}
            } //...
        ],
        "path": [ // путь (координаты)
            {
                "point": {"lt": "+45.065397", "ln": "+38.993386"},
                "time": "2014-01-28T13:21:60Z"
            },{
                "point": {"lt": "+45.065397", "ln": "+38.993386"},
                "time": "2014-01-28T13:22:10Z"
            } // ...
        ],
        "costDetails": {
            "callCost": 20.50, // стоимость посадки (можно ли назвать стоимости вызова?), руб
            "distance": 2.345, // дистанция, км.
            "waitingTime": 20, // время ожидания, сек.
            "pathCost": 207, // стоимость пробега, руб
            "waitingCost": 2.50, // стоимость ожидания, руб
            "cost": 230.50 // финальная стоимость, руб
        }
    }]
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-order" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>

                <p>Получив ответ, приложение анализирует таймлайн и определяет текущую ситуацию с заказом.
                    С точки зрения взаимодействия с сервером, существует 4 ситуации:</p>
                <ul>
                    <li>а. Клиент звонит первый раз, оператор заполняет карточку заказа</li>
                    <li>б. Клиент звонит повторно, требуется изменение заказа</li>
                    <li>в. Клиент звонит повторно, требуется удаление поездки из заказа</li>
                    <li>г. Клиент звонит повторно, никакого взаимодействия с сервером не требуется</li>
                </ul>

                <p>При добавлении/изменении заказа клиентское приложение отсылает на сервер не заказ целиком, а отдельные поездки.
                    Отличие между добавлением и изменением поездки только в количестве передаваемой информации: при обновлении
                    отправляемая поездка может содержать таймлайн, информацию о ТС и т.д., эти нередактируемые (а добавляемые
                    сервером при обработке заказа) поля должны игнорироваться сервером.</p>

                <p class="alert alert-warning">Перед отправкой отредактированной/добавленой поездки приложение
                    <b>может</b> <a href="/tux/api.htm#js-href-address">запросить у сервера информацию об адресах</a>
                    текущей улицы или района (для выбора в приложении точного адреса).</p>

                <p><code>GET /address?streetId=:streetId</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-address" class="pseudo-link"><b>Пример ответа сервера</b></a></p>
                    <div id="js-collapse-address" class="collapse">
<pre class="code">
{
    "search": [{
        "type": "street",
        "data": {
            "id": 2
        }
    }],
    "items": [{
        "id": 11054,   // id адреса, если адрес есть в базе
        "isPublic": false, // публичное ли место
        "street": {  // улица
            "id": 7058,  // id улицы, если есть в словаре
            "name": "Зиповская" // необязательно, если есть id, но в ответе от сервера лучше передавать, из-за маловероятной возможности, что в ловаре ОП ещё нет этой улицы
        },
        "district": { // район
            "id": 789,
            "name": "ЗИП",
            "city": { // населённый пункт
                "id": 4,
                "name": "Адлер"
            }
        },
        "house": "6",        // дом
        "entrances": [ // подъезды
            { // подъезд 1
                "id": 6767660,
                "name": "Красная/Северная",
                "location": { // координаты подъезда
                    "lt": "+45.065397", // широта
                    "ln": "+38.993386"  // долгота
                }
            },
            { // подъезд 2
                "id": 6767661,
                "name": "Рашпилевская/Головатого",
                "location": { // координаты подъезда
                    "lt": "+45.065326", // широта
                    "ln": "+38.993345"  // долгота
                }
            }
        ],

        "location": {        // координаты
            "lt": "+45.065397", // широта
            "ln": "+38.993386"  // долгота
        },
        "description": "Между Белкой и Пиноккио Джан до конца, зелёная лестница" // постоянный комментарий/описание к адресу
    }]
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-address" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>

                <p class="alert alert-warning">В случаях <code>1.а</code> и <code>1.б</code> (добавление или изменение поездки) оператор создаёт/изменяет поездку и <a href="/tux/api.htm#js-href-ride-post">отправляет данные на сервер</a></p>
                <p><code>1.а</code> <code>POST /order/:orderId/ride</code> добавление поездки к заказу</p>
                <p><code>1.б</code> <code>POST /ride/:rideId</code> изменение поездки</p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-ride-post" class="pseudo-link"><b>Пример запроса на добавление</b></a></p>
                    <div id="js-collapse-ride-post" class="collapse">
<pre class="code">
{
    "orderType": "preorder", // тип заказа "emergence", "preorder", "normal"
    "preOrderTime": "2014-01-28T13:21:60Z", // время подачи (если предзаказ),
    "alertTypeId": 1, // тип оповещения
    "orderedProperties": { // заказанные свойства
        "options": [2, 5, 7],
        "type": { // тип автомобиля (грузовой, легковой, мотоцикл)
            "id": 4,
            "classId": 12 // класс автомобиля, если есть
        }
    },
    "phone": "79182220200", // Номер для связи
    "description": "Клиент с собакой", // комментарий к поездке, такие как: на верхний багажник лыжи и сноуборд; 2 чемодана в багажник, и т.д

    "departureAddress": { // пункт отбытия
        "id": 768665,
        "isPublic": false, // публичное ли место
        "street": {  // улица
            "id": 7058,  // id улицы, если есть в словаре
            "name": "Зиповская" // необязательно, если есть id, но в ответе от сервера лучше передавать, из-за маловероятной возможности, что в ловаре ОП ещё нет этой улицы
        },
        "district": { // район
            "id": 789,
            "name": "ЗИП",
            "city": { // населённый пункт
                "id": 4,
                "name": "Адлер"
            }
        },
        "house": "5", // дом
        "entrance": { // подъезд
            "id": 6767660,
            "name": "Красная/Северная",
            "location": { // координаты подъезда
                "lt": "+45.065397", // широта
                "ln": "+38.993386"  // долгота
            }
        },
        "description": "Между Белкой и Пиноккио Джан до конца, зелёная лестница" // постоянный комментарий/описание к адресу
    },
    "destination": { // пункт назначения (необязательно)
        "id": 768665,
        "isPublic": false, // публичное ли место
        "street": {  // улица
            "id": 7058,  // id улицы, если есть в словаре
            "name": "Зиповская" // необязательно, если есть id, но в ответе от сервера лучше передавать, из-за маловероятной возможности, что в ловаре ОП ещё нет этой улицы
        },
        "district": { // район
            "id": 789,
            "name": "ЗИП",
            "city": { // населённый пункт
                "id": 4,
                "name": "Адлер"
            }
        },
        "house": "5", // дом
        "entrance": { // подъезд
            "id": 6767660,
            "name": "Красная/Северная",
            "location": { // координаты подъезда
                "lt": "+45.065397", // широта
                "ln": "+38.993386"  // долгота
            }
        },
        "description": "" // постоянный комментарий/описание к адресу
    }
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-ride-post" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>
                <p>В ответ получает <b>полную</b> поездку, то есть:</p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-ride-get" class="pseudo-link"><b>Пример ответа сервера на запрос на добавление</b></a></p>
                    <div id="js-collapse-ride-get" class="collapse">
<pre class="code">
{
    "id": 754309, // id поездки
    "orderType": "preorder", // тип заказа "emergence", "preorder", "normal"
    "preOrderTime": "2014-01-28T13:21:60Z", // время подачи (если предзаказ),
    "alertTypeId": 1, // тип оповещения
    "orderedProperties": { // заказанные свойства
        "options": [2, 5, 7],
        "type": { // тип автомобиля (грузовой, легковой, мотоцикл)
            "id": 4,
            "classId": 12 // класс автомобиля, если есть
        }
    },
    "phone": "79182220200", // Номер для связи
    "description": "Клиент с собакой", // комментарий к поездке, такие как: на верхний багажник лыжи и сноуборд; 2 чемодана в багажник, и т.д

    "departureAddress": { // пункт отбытия
        "id": 768665,
        "isPublic": false, // публичное ли место
        "street": {  // улица
            "id": 7058,  // id улицы, если есть в словаре
            "name": "Зиповская" // необязательно, если есть id, но в ответе от сервера лучше передавать, из-за маловероятной возможности, что в ловаре ОП ещё нет этой улицы
        },
        "district": { // район
            "id": 789,
            "name": "ЗИП",
            "city": { // населённый пункт
                "id": 4,
                "name": "Адлер"
            }
        },
        "house": "5", // дом
        "entrance": { // подъезд
            "id": 6767660,
            "name": "Красная/Северная",
            "location": { // координаты подъезда
                "lt": "+45.065397", // широта
                "ln": "+38.993386"  // долгота
            }
        },
        "description": "Между Белкой и Пиноккио Джан до конца, зелёная лестница" // постоянный комментарий/описание к адресу
    },
    "destinationAddress": { // пункт назначения (необязательно)
        "id": 768665,
        "isPublic": false, // публичное ли место
        "street": {  // улица
            "id": 7058,  // id улицы, если есть в словаре
            "name": "Зиповская" // необязательно, если есть id, но в ответе от сервера лучше передавать, из-за маловероятной возможности, что в ловаре ОП ещё нет этой улицы
        },
        "district": { // район
            "id": 789,
            "name": "ЗИП",
            "city": { // населённый пункт
                "id": 4,
                "name": "Адлер"
            }
        },
        "house": "5", // дом
        "entrance": { // подъезд
            "id": 6767660,
            "name": "Красная/Северная",
            "location": { // координаты подъезда
                "lt": "+45.065397", // широта
                "ln": "+38.993386"  // долгота
            }
        },
        "description": "" // постоянный комментарий/описание к адресу
    },
    "vehicle": {
        "id": 234,
        "callSign": "5CC1-4", // позывной
        "brandId": 12, // марка машины
        "colorId": 1, // цвет
        "type": { // тип автомобиля (грузовой, легковой, мотоцикл)
            "id": 4,
            "classId": 12 // класс автомобиля, если есть
        },
        "number": "KK345O", // номер автомобиля
        "options": [1, 2, 5 ,7] // опции автомобиля
    },
    "timeline": [ // лог событий, от последнего к первому
        {
            "type": "arrive", // тип события, такие как:  звонок клиента (является ли это событием для лога?), назначение автомобиля (assign), автомобиль приехал, дозвон не удался, сообщение от пассажира и т.д.
            "time": "2014-01-28T13:21:60Z", // unix timestamp события
            "message": "какое-то сообщения", // сообщение
            "data": {} // какая-то доп. информация
        }, {
            "type": "call",
            "time": "2014-01-28T13:21:60Z",
            "message": "",
            "data": {}
        } //...
    ],
    "path": [ // путь (координаты)
        {
            "point": {"lt": "+45.065397", "ln": "+38.993386"},
            "time": "2014-01-28T13:21:60Z"
        },{
            "point": {"lt": "+45.065397", "ln": "+38.993386"},
            "time": "2014-01-28T13:22:10Z"
        } // ...
    ],
    "costDetails": {
        "callCost": 20.50, // стоимость посадки (можно ли назвать стоимости вызова?), руб
        "distance": 2.345, // дистанция, км.
        "waitingTime": 20, // время ожидания, сек.
        "pathCost": 207, // стоимость пробега, руб
        "waitingCost": 2.50, // стоимость ожидания, руб
        "cost": 230.50 // финальная стоимость, руб
    }
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-ride-get" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>

                <p class="alert alert-warning">В случае <code>1.в</code> (удаление поездки) приложение <a href="/tux/api.htm#js-href-ride-cansel">отправляет на сервер запрос</a> вида</p>
                <p><code>POST /ride/:rideId/cancel</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-ride-cancel" class="pseudo-link"><b>Пример запроса на отмену поездки</b></a></p>
                    <div id="js-collapse-ride-cancel" class="collapse">
<pre class="code">
{
    "cancelTypeId": 12, // id причины отмены поездки
    "text": "Какая-то странная причина отмены поездки"
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-ride-cancel" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>
                <p>При удачной отмене сервер возвращает любой ответ с кодом <code>200</code>, при неудаче -- <a href="/tux/index.htm#js-href-http_errors">стандартное сообщение об ошибке</a></p>

                <h2 class="anchored" id="js-href-process-begin">2. Аутентификация</h2>

                <p class="alert alert-warning">а. После удачной аутентификации приложение запрашивает список всех словарей</p>
                <p><code>GET /dictionaries</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-dictionaries" class="pseudo-link"><b>Пример ответа сервера</b></a></p>
                    <div id="js-collapse-dictionaries" class="collapse">
<pre class="code">
{
    "version": 1356, // версия словарей. позже, во время обновления словарей, отправляем версию на сервер для получения изменений в словарях
    "dictionaries": [
        {
            "code": "areas",
            "name": "Группы городов", // группа городов определяется рекламным номером
            "items": [
                {
                    "id": 1,
                    "name": "Сочи",
                    "currency": "Р",
                    "timezone": "Europe/Moscow",
                    "phoneCode": "8"
                }
                // ... другие группы городов
            ]
        }, {
            "code": "vehicleTypes",
            "name": "Типы автомобилей",
            "items": [
                {
                    "id": 1,
                    "name": "Грузовик"
                }
                // ...

            ]
        }
        // ...
    ]
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-dictionaries" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>

                <p class="alert alert-warning">б. Список опций</p>
                <p><code>GET /options</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-options" class="pseudo-link"><b>Пример ответа сервера</b></a></p>
                    <div id="js-collapse-options" class="collapse">
<pre class="code">
{
    "mapService": "osm", // сервис карт
    "imagesBaseUrl": "http://example.com/i/", // базовый путь к картинкам (например, для открытия смен)
    "language": "ru", // язык интерфейса
    "sync": {
        "vehicleOptions": {
            "interval": 360
        },
        "time": {
            "interval": 3600
        },
        "dictionaries": {
            "interval": 3600
        }
    },
    "sip": {
        "credentials": {
            "uid": "001",
            "password": "somePassword"
        },
        "ip": "00.00.00.00",
        "port": "5060"
    }
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-options" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>


                <h2 class="anchored" id="js-href-process-shift">3. Смены</h2>
                <p class="alert alert-warning">Сервер с помощью websocket-сообщения уведомляет приложение о заявке на открытие смены</p>
<pre class="code">
{
    "type": "shift",
    "data": {
        "id": 65408 // id смены
    }
}
</pre>
                <p class="alert alert-warning">Приложение запрашивает заявку</p>
                <p><code>GET /shift/:shiftId</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-shift-get" class="pseudo-link"><b>Пример ответа сервера</b></a></p>
                    <div id="js-collapse-shift-get" class="collapse">
<pre class="code">
{
    "id": 65408,
    "photo": ["9b8wxcf8p80au9b.jpg", "4f3pzpeqywm2gei.jpg"],
    "time": "2014-01-28T13:21:60Z", // время подачи заявки на открытие смены
    "attemptCount": 3, // предыдущих попыток
    "isMatchAllAvailable": false, // возможность отметить все требования удовлетворёнными
    "comment": "Приглядись к заднему стеклу", // последний комментарий к смене
    "requirements": {
        "vehicle": [ // требования к автомобилю
            {
                "id": 1,
                "name": "Чистая машина",
                "important": false // если нужно выделить этот пункт (т.к., например, в прошлый раз не прошёл по этому пункту)
            }, {
                "id": 2,
                "name": "Нет повреждений",
                "important": true
            }
            // ...
        ],
        "priorities": [ // приоритеты ТС
            {
                "id": 1,
                "name": "Открытый верх",
                "important": false
            }
        ],
        "request": [ // требования к запросу (к фотографии и т.п.)
            {
                "id": 1,
                "name": "Видно всю машину",
                "important": false
            }, {
                "id": 2,
                "name": "Видно номер",
                "important": false
            }
            // ...
        ]
    }
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-shift-get" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>

                <p class="alert alert-warning">Оператор после проверки данных отправляет запрос на сервер, содержащий заявку на открытие смены с проставленным параметром <code>isMatch</code>.</p>
                <p><code>POST /shift/:shiftId</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-shift-post" class="pseudo-link"><b>Пример запроса</b></a></p>
                    <div id="js-collapse-shift-post" class="collapse">
<pre class="code">
{
    "id": 65408,
    "photo": ["9b8wxcf8p80au9b.jpg", "4f3pzpeqywm2gei.jpg"],
    "time": "2014-01-28T13:21:60Z", // время подачи заявки на открытие смены
    "lifetime": 60, // время в секундах, после которого сообщение пересылается другому прользователю
    "attemptCount": 3, // предыдущих попыток
    "isMatchAllAvailable": false, // возможность отметить все требования удовлетворёнными
    "comment": "Приглядись к заднему стеклу", // последний комментарий к смене
    "requirements": {
        "vehicle": [ // требования к автомобилю
            {
                "id": 1,
                "name": "Чистая машина",
                "important": false, // если нужно выделить этот пункт (т.к., например, в прошлый раз не прошёл по этому пункту)
                "isMatch": true // соответствует ли требованию
            }, {
                "id": 2,
                "name": "Нет повреждений",
                "important": true,
                "isMatch": true
            }
            // ...
        ],
        "priorities": [ // приоритеты ТС
            {
                "id": 1,
                "name": "Открытый верх",
                "important": false
            }
        ],
        "request": [ // требования к запросу (к фотографии и т.п.)
            {
                "id": 1,
                "name": "Видно всю машину",
                "important": false,
                "isMatch": true
            }, {
                "id": 1,
                "name": "Видно номер",
                "important": false,
                "isMatch": true
            }
            // ...
        ]
    }
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-shift-post" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>

                <p>Если сервер получил заявку от оператора (в силу, например, медленного соединения) по прошествии
                    времени, указанного в <code>lifetime</code>, он возвращает
                    <a href="/tux/index.htm#js-href-http_codes">стандартное сообщение об ошибке</a> с кодом
                    <code>422 Unprocessable Entity</code></p>


                <h2 class="anchored" id="js-href-process-message">4. Сообщения</h2>
                <p class="alert alert-warning">Сервер уведомляет приложение о новом сообщении в треде</p>
<pre class="code">
{
    "type": "message",
    "data": {
        "id": 8444439 // id треда
    }
}
</pre>
                <p class="alert alert-warning">Приложение запрашивает это сообщение</p>
                <p><code>GET /thread/:threadId</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-message-get" class="pseudo-link"><b>Пример запроса</b></a></p>
                    <div id="js-collapse-message-get" class="collapse">
<pre class="code">
{
    "message": "у всех так?",
    "time": "2014-01-28T13:21:40.372Z",
    "orderId": 1,
    "rideId": 1,
    "sender": {
        "name": "5CC1-4",
        "type": "vehicle",
        "id": "783"
    }
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-message-get" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>
                <p class="alert alert-warning">Если оператор успевает ответить на сообщение в течение времени, указанного в параметре <code>lifetime</code>, то приложение отправляет на сервер ответ вида</p>
                <p><code>POST /thread/:threadId/message</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-message-post" class="pseudo-link"><b>Пример запроса</b></a></p>
                    <div id="js-collapse-message-post" class="collapse">
<pre class="code">
{
    "message": "нет"
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-message-post" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>
                <p>В таком случае сервер возвращает тред уже с данным сообщением</p>

                <p>Если сервер получил сообщение от оператора (в силу, например, медленного соединения) по прошествии
                    времени, указанного в <code>lifetime</code>, он возвращает
                    <a href="/tux/index.htm#js-href-http_codes">стандартное сообщение об ошибке</a> с кодом
                    <code>422 Unprocessable Entity</code></p>

                <h2 class="anchored" id="js-href-process-dictionaries">5. Обновление словарей</h2>
                <p>Операторское приложение может запросить текущую версию словарей на сервере</p>
                <p><code>GET /sync/dictionaries</code></p>

                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-process-sync-dictionaries" class="pseudo-link"><b>Пример ответа от сервера</b></a></p>
                    <div id="js-collapse-process-sync-dictionaries" class="collapse">
<pre class="code">
{
    "version": 123456
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-process-sync-dictionaries" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>
                <p>Если версия отличается от текущей версии словарей оператора, то приложение запрашивает все словари от сервера стандартным образом и подменяет ими устаревшие</p>

                <!--<p>При обновлении словарей на сервере (добавилась новая улица, тип автомобиля и т.д.) сервер уведомляет-->
                    <!--об этом приложение<code></code></p>-->
<!--<pre class="code">-->
<!--include "websocket-api/update-dictionary.json"-->
<!--</pre>-->
                <!--<p class="alert alert-warning">Приложение запрашивает изменения, произошедшие в словарях с момента получения текущей (используемой-->
                    <!--приложением) версии словарей, для этого в запрос включается идентификатор текущей версии словарей-->
                    <!--<code>currentVersionId</code>.</p>-->

                <!--<p><code>GET /dictionaries/:currentVersionId/difference</code></p>-->
                <!--<div class="collapse-wrap">-->
                    <!--<p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-dictionaries-diff" class="pseudo-link"><b>Пример ответа от сервера</b></a></p>-->
                    <!--<div id="js-collapse-dictionaries-diff" class="collapse">-->
<!--<pre class="code">-->
<!--include "api/dictionaries-diff.json"-->
<!--<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-dictionaries-diff" class="pseudo-link">Свернуть</a>-->
<!--</pre>-->
                    <!--</div>-->
                <!--</div>-->

                <h2 class="anchored" id="js-href-process-sync">5. Синхронизация данных</h2>
                <p>Приложение на основе <a href="/tux/api.htm#js-href-settings">настроек синхронизации</a> каждый <code>interval</code> отправляет на сервер запросы вида</p>

                <p><code>GET /sync/time</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-process-sync-time" class="pseudo-link"><b>Пример ответа от сервера</b></a></p>
                    <div id="js-collapse-process-sync-time" class="collapse">
<pre class="code">
{
    "time": "2014-03-05T13:21:60Z"
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-process-sync-time" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>


                <p><code>GET /sync/vehicleOptions</code></p>
                <div class="collapse-wrap">
                    <p><a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-process-sync-vehicleOptions" class="pseudo-link"><b>Пример ответа от сервера</b></a></p>
                    <div id="js-collapse-process-sync-vehicleOptions" class="collapse">
<pre class="code">
{
    "vehicleOptions": [
        [1, 2, 3],
        [1, 4, 6, 9],
        [12, 15]
    ]
}
<a data-toggle="collapse" data-parent=".collapse-wrap" href="#js-collapse-process-sync-vehicleOptions" class="pseudo-link">Свернуть</a>
</pre>
                    </div>
                </div>

                <div id="disqus_thread"></div>
                <script type="text/javascript">
                    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
                    var disqus_shortname = 'boxfrommars'; // required: replace example with your forum shortname

                    /* * * DON'T EDIT BELOW THIS LINE * * */
                    (function() {
                        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
                        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                    })();
                </script>
                <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
                <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
            </div>

            <div class="col-md-3 hidden-xs hidden-sm sidebar-column">
                <div data-spy="affix" data-offset-top="40" data-offset-bottom="200" class="sidebar-affix">
                    <ul class="nav bs-sidenav">
                        <li><a href="#js-href-process-call">Звонок</a></li>
                        <li><a href="#js-href-process-begin">Аутентификация</a></li>
                        <li><a href="#js-href-process-shift">Смены</a></li>
                        <li><a href="#js-href-process-message">Сообщения</a></li>
                        <li><a href="#js-href-process-dictionaries">Обновление словарей</a></li>
                        <li><a href="#js-href-process-sync">Синхронизация данных</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div id="push"></div>
</div>

<div id="footer">
    <div class="container">
        <p class="text-muted">&copy; 2014 Rutorika.</p>
    </div>
</div>


<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="http://code.jquery.com/jquery-2.1.0.min.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<script src="http://yandex.st/highlightjs/8.0/highlight.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.6.0/underscore-min.js"></script>

<script>
    $(document).ready(function() {
        $('pre.code').each(function(i, e) {hljs.highlightBlock(e)});
        $("a[href*='" + location.pathname + "']").parent('li').addClass('active');
    });
</script>

</body>
</html>